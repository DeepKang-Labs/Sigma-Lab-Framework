name: smoke

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  smoke:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pyyaml

      - name: Show tree (debug)
        run: |
          echo "üìÇ Repository tree:"
          ls -R

      - name: Run Sigma-Lab unit tests
        run: |
          echo "üß™ Running Sigma-Lab tests..."
          python sigma_lab_v4_2.py --test

      - name: Ensure skywire_bridge is a package (safety net)
        run: |
          test -f skywire_bridge/__init__.py || touch skywire_bridge/__init__.py

      - name: Create demo discovery data
        run: |
          mkdir -p skywire_bridge/discovery
          cat > skywire_bridge/discovery/decision_mapper.yaml <<'EOF'
          version: "1.0"
          discovery_date: "2025-10-25"
          decision_points:
            - decision_id: "dp_001"
              description: "Latency vs decentralization routing optimization"
              stakeholders: ["relay_nodes", "end_users", "core_devs"]
              governance_dimensions:
                technical_complexity: 6
                economic_impact: 5
                user_experience_impact: 8
                security_implications: 4
          EOF

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Mode validation seulement
      - name: Bridge ‚Ä¢ validate-only mode
        run: |
          echo "üîç Running Skywire Bridge (validate-only)..."
          python skywire_bridge/run_skywire_integrated.py \
            --discovery skywire_bridge/discovery \
            --config skywire_bridge/config_skywire_optimized.yaml \
            --mappings skywire_bridge/skywire_mappings.yaml \
            --out skywire_bridge/_validate_report.json \
            --validate-only

      # Pipeline complet
      - name: Bridge ‚Ä¢ full pipeline
        run: |
          echo "üöÄ Running full Skywire ‚Üí Sigma-Lab pipeline..."
          python skywire_bridge/run_skywire_integrated.py \
            --discovery skywire_bridge/discovery \
            --config skywire_bridge/config_skywire_optimized.yaml \
            --mappings skywire_bridge/skywire_mappings.yaml \
            --out skywire_bridge/_final_report.json

      - name: Upload bridge report
        uses: actions/upload-artifact@v3
        with:
          name: skywire-bridge-report
          path: skywire_bridge/_final_report.json
