name: smoke
on: [push]

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create demo discovery data
        run: |
          mkdir -p discovery
          # optional placeholder; NetworkBridge has a demo fallback
          echo "version: '1.0'\ndiscovery_date: '2025-10-25'\ndecision_points: []" > discovery/decision_mapper.yaml

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run unit tests (bridge)
        run: python -m pytest -q

      - name: Bridge • validate-only (Skywire)
        run: |
          python network_bridge/run_network_integrated.py \
            --network skywire \
            --discovery ./discovery \
            --mappings ./network_bridge/mappings_skywire.yaml \
            --config ./sigma_config_placeholder.yaml \
            --out ./pilots/validation_logs/skywire_validate_only.json \
            --validate-only \
            --formula-eval auto \
            --pretty

      - name: Bridge • validate-only (Fiber)
        run: |
          python network_bridge/run_network_integrated.py \
            --network fiber \
            --discovery ./discovery \
            --mappings ./network_bridge/mappings_fiber.yaml \
            --config ./sigma_config_placeholder.yaml \
            --out ./pilots/validation_logs/fiber_validate_only.json \
            --validate-only \
            --formula-eval auto \
            --pretty

      - name: Upload validate-only reports
        uses: actions/upload-artifact@v4
        with:
          name: validate-only-reports
          path: pilots/validation_logs/*.json
