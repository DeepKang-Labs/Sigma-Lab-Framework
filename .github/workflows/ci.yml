name: CI • Sigma-Lab & SkyWire Bridge (Smoke)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  smoke:
    name: Smoke on ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install numpy pyyaml
          fi

      - name: Show tree (debug)
        run: |
          ls -la
          echo
          [ -d "bridge/" ] && ls -la bridge || true
          [ -d "docs/" ] && ls -la docs || true

      # --- Sigma-Lab unit tests (embedded) ---
      - name: Run Sigma-Lab unit tests
        run: |
          # Adapte le nom si ton fichier s’appelle différemment (ex: sigma_lab_v421.py)
          python sigma_lab_v421.py --test

      # --- Prepare demo Discovery data for the Bridge ---
      - name: Create demo discovery data
        run: |
          mkdir -p discovery
          cat > discovery/decision_mapper.yaml << 'YAML'
          version: "1.0"
          discovery_date: "2025-10-25"
          decision_points:
            - decision_id: "dp_001"
              description: "Tradeoff latency vs energy use in real-time routing"
              context: "packet routing"
              stakeholders: ["relay_nodes", "end_users", "core_devs"]
              conflicting_objectives:
                - { objective: "Minimal latency", metric: "ms", target: "<50ms" }
                - { objective: "Energy efficiency", metric: "joules/packet", target: "minimize" }
              current_pain_level: 8
              decision_frequency: "continuous"
              governance_dimensions:
                technical_complexity: 7
                economic_impact: 6
                user_experience_impact: 9
                security_implications: 4
          YAML

      # --- Bridge validation-only (fast) ---
      - name: Bridge • validate-only mode
        run: |
          # Ces fichiers doivent déjà être dans le repo :
          # - sigma_bridge.py
          # - run_skywire_integrated.py
          # - skywire_mappings.yaml
          # - config_skywire_optimized.yaml
          python run_skywire_integrated.py \
            --discovery ./discovery \
            --config ./config_skywire_optimized.yaml \
            --mappings ./skywire_mappings.yaml \
            --out ./skywire_integrated_analysis.json \
            --validate-only

      # --- Bridge full run (generates report & contexts) ---
      - name: Bridge • full pipeline
        run: |
          mkdir -p out_contexts
          python run_skywire_integrated.py \
            --discovery ./discovery \
            --config ./config_skywire_optimized.yaml \
            --mappings ./skywire_mappings.yaml \
            --out ./skywire_integrated_analysis.json \
            --export-contexts ./out_contexts \
            --benchmark ./baseline.yaml
          echo "---- SUMMARY ----"
          python - << 'PY'
          import json, sys
          with open("skywire_integrated_analysis.json","r",encoding="utf-8") as f:
              data = json.load(f)
          s = data.get("integration_report",{}).get("summary",{})
          print("Decisions:", s.get("total_decisions_analyzed"))
          print("High-risk:", s.get("high_risk_decisions"))
          print("Avg stability:", s.get("average_stability_score"))
          PY
